@model IEnumerable<DCS_new.Models.task>
@{
    ViewBag.Title = "chat";

    var status = "";
    var s_text = ViewData["sstatus"];
    if ((string)s_text == "Available")
    {
        status = "🟢 " + ViewData["sstatus"];

    }
    else if ((string)s_text == "Busy")
    {
        status = "🟠 " + ViewData["sstatus"];
    }
    else
    {
        status = "🔴 " + ViewData["sstatus"];
    }

}

<h2>💬 @ViewData["sname"]</h2>
<p style="font-size:12px">@status <span style="color: white; -webkit-user-select: none;">testte</span>🟢 @ViewData["e_online"] members online<span style="color: white; -webkit-user-select: none;">testte</span>⚫ @ViewData["e_offline"] members offline</p>

<p>Adminstrator Id: @ViewData["admnid"]</p>
<input type="hidden" id="chatname" name="chatname" value="@ViewData["chatname"]">

@if ((string)Session["sp_head"] == "True" || (string)Session["actype"] == "business")
{
    <p style="background-color:lightgreen;width:12%;text-align:center;border-radius:5px;">You are an Admin</p>
}

<div class="">
    <form action="/space/details" class="form-line" method="get">
        <input type="hidden" name="sid" value=@ViewData["sid"] />
        <button type="submit" class="btn btn-secondary">Space Details</button>
    </form>

    <form action="/space/addtasks" method="get" class="form-line">
        @if ((string)Session["sp_head"] == "True" || (string)Session["actype"] == "business")
        {
            <input type="hidden" name="sid" value=@ViewData["sid"] />
            <button type="submit" class="btn btn-warning">Add Tasks✔️</button>
        }
        else
        {
            <input type="hidden" name="sid" value=@ViewData["sid"] />
            <button type="submit" class="btn btn-warning" disabled>Add Tasks✔️</button>
        }

    </form>
    <form action="/space/raiseissue" method="get" class="form-line">
        <input type="hidden" name="sid" value=@ViewData["sid"] />
        <button type="submit" class="btn btn-danger">Raise Issue🛑</button>
    </form>
    <form action="/space/viewissue" method="get" class="form-line">
        <input type="hidden" name="sid" value=@ViewData["sid"] />
        <button type="submit" class="btn btn-danger">View Issue🛑</button>
    </form>

</div>
<br />
<hr />

<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" />
    <input type="hidden" id="displayname" />
    <ul id="discussion">
    </ul>
</div>
<hr />
<h3>Your Tasks</h3>
<br />
<ul>
    @foreach (var data in (IEnumerable<DCS_new.Models.task>)ViewData["tdata"])
    {
        <li style="background-color: yellow; width: 50%; text-align: left; border-radius: 5px;">@data.e_id : @data.task_desc : <a href="/space/taskcomplete?sid=@data.s_id&tid=@data.t_id">Set complete</a></li>
        
    }
</ul>


    @section scripts {
        <!--Script references. -->
        <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
        <!--Reference the SignalR library. -->
        <script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>
        <!--Reference the autogenerated SignalR hub script. -->
        <script src="~/signalr/hubs"></script>
        <!--SignalR script to update the chat page and send messages.-->
        <script>
            $(function () {
                // Reference the auto-generated proxy for the hub.
                var chat = $.connection.chatHub;
                // Create a function that the hub can call back to display messages.
                chat.client.addNewMessageToPage = function (name, message) {
                    // Add the message to the page.
                    $('#discussion').append('<li><strong>' + htmlEncode(name)
                        + '</strong>: ' + htmlEncode(message) + '</li>');
                };
                // Get the user name and store it to prepend to messages.
                //prompt('Enter your name:', '')
                $('#displayname').val($('#chatname').val());
                // Set initial focus to message input box.
                $('#message').focus();
                // Start the connection.
                $.connection.hub.start().done(function () {
                    $('#sendmessage').click(function () {
                        // Call the Send method on the hub.
                        chat.server.send($('#displayname').val(), $('#message').val());
                        // Clear text box and reset focus for next comment.
                        $('#message').val('').focus();
                    });
                });
            });
            // This optional function html-encodes messages for display in the page.
            function htmlEncode(value) {
                var encodedValue = $('<div />').text(value).html();
                return encodedValue;
            }
        </script>
    }